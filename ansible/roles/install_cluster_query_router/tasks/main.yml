---
- name: Add Mongo Admin User
  mongodb_user:
    database: admin
    name: "{{ mongo_admin_username }}"
    password: "{{ mongo_admin_password }}"
    state: present
    roles: root

- name: Stop Mongo
  become: yes
  systemd:
    name: mongod
    state: stopped

- name: Add mongo config file
  become: yes
  vars:
    conf0: "{{ hostvars[groups['mongo-config-hosts'][0]]['ansible_eth0']['ipv4']['address'] }}"
    conf1: "{{ hostvars[groups['mongo-config-hosts'][1]]['ansible_eth0']['ipv4']['address'] }}"
    conf2: "{{ hostvars[groups['mongo-config-hosts'][2]]['ansible_eth0']['ipv4']['address'] }}"
  template:
    src: mongos.conf.j2
    dest: /etc/mongos.conf
    owner: root
    group: root
    mode: 0644

- name: Add mongos unit file
  become: yes
  template:
    src: mongos.service.j2
    dest: /lib/systemd/system/mongos.service
    owner: root
    group: root
    mode: 0644

- name: Start Mongos
  become: yes
  systemd:
    name: mongos
    state: started

- name: Initialize ReplicaSet
  vars:
    conf0: "{{ hostvars[groups['mongo-query-router-hosts'][0]]['ansible_eth0']['ipv4']['address'] }}"
    conf1: "{{ hostvars[groups['mongo-query-router-hosts'][1]]['ansible_eth0']['ipv4']['address'] }}"
    init_cmd: "{ _id: \"{{repl_set_name}}\", members: [ { _id: 0, host: \"{{ conf0 }}:27017\" }, { _id: 1, host: \"{{ conf1 }}:27017\" } ] }"
  command: mongo localhost:27017 -u "{{ mongo_admin_username }}" -p "{{ mongo_admin_password }}" --authenticationDatabase admin --quiet --eval \'printjson(rs.initiate("{{ init_cmd }}"))\'